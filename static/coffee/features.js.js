// Generated by CoffeeScript 1.9.3
(function() {
  $(function() {
    (function() {
      var $features;
      $features = $('.feature');
      if ($features.length > 0) {
        $features.find('.feature__perex').each(function() {
          var $this;
          $this = $(this);
          if ($this.siblings('.feature__desc').length) {
            return $this.append('<a href="#" class="feature__toggler feature__toggler--more" data-alt="' + less_info + '">' + more_info + '</a>');
          }
        });
        return $features.find('.feature__toggler').click(function(e) {
          var $toggler, old;
          e.preventDefault();
          $toggler = $(this);
          $toggler.toggleClass('feature__toggler--more').toggleClass('feature__toggler--less').parents('.feature__perex').siblings('.feature__desc').toggle();
          old = $toggler.text();
          $toggler.text($toggler.data('alt'));
          return $toggler.data('alt', old);
        });
      }
    })();
    (function() {
      var $features, $icon, $icons, $menu, $w, activeCls, debounce, lastActive, menuHeight, structure, stuckMenuCls, viewportHeight;
      $menu = $('.menu--sticky');
      $icons = $menu.find('.feature__icon');
      menuHeight = $menu.outerHeight();
      $icons.click(function(e) {
        var anchor;
        e.preventDefault();
        anchor = $(this).attr('href');
        $('html, body').animate({
          scrollTop: $(anchor).offset().top - menuHeight
        }, 500);
        return window.location.hash = anchor;
      });
      if (document.location.hash) {
        $icon = $icons.filter("[href=" + document.location.hash + "]");
        if ($icon.length) {
          $icon.click();
        }
      }
      activeCls = 'feature__icon--active';
      stuckMenuCls = 'menu--stuck';
      $('.menu__placeholder').waypoint({
        handler: function(direction) {
          var $placeholder, height;
          if ($menu.is(':hidden')) {
            return;
          }
          $placeholder = $(this.element);
          if (direction === 'down') {
            $menu.addClass(stuckMenuCls);
            height = menuHeight;
          } else {
            $menu.removeClass(stuckMenuCls);
            $icons.removeClass(activeCls);
            height = 0;
          }
          return $placeholder.height(height);
        }
      });
      $features = $('.feature');
      structure = [];
      $features.each(function(i, e) {
        var $e, s;
        $e = $(e);
        s = {
          topEdge: e.offsetTop,
          height: $e.height(),
          name: $e.find('.feature__title').attr('id')
        };
        s.bottomEdge = s.topEdge + s.height;
        return structure[i] = s;
      });
      $w = $(window);
      viewportHeight = $w.height();
      lastActive = null;
      debounce = function(fn, delay) {
        var timer;
        timer = null;
        return function() {
          var args, context;
          context = this;
          args = arguments;
          clearTimeout(timer);
          timer = setTimeout((function() {
            fn.apply(context, args);
          }), delay);
        };
      };
      $w.scroll(debounce(function() {
        var active, bottomEdge, topEdge, visibility;
        if (!$menu.hasClass(stuckMenuCls)) {
          lastActive = null;
          return;
        }
        topEdge = $w.scrollTop() + menuHeight;
        bottomEdge = topEdge + viewportHeight - menuHeight;
        visibility = [];
        $.each(structure, function(_, e) {
          return visibility.push((Math.min(e.bottomEdge, bottomEdge) - Math.max(e.topEdge, topEdge)) / e.height);
        });
        active = structure[visibility.indexOf(Math.max.apply(Math, visibility))].name;
        if (active !== lastActive) {
          $icons.removeClass(activeCls);
          $icons.filter("[href=#" + active + "]").addClass(activeCls);
          return lastActive = active;
        }
      }, 50));
      return $w.scroll();
    })();
    return (function() {
      var activeCls, cls;
      cls = 'feature__step-number';
      activeCls = cls + "--active";
      return $('.feature__tour').each(function(i, e) {
        var $steps, $tour;
        $tour = $(e);
        $steps = $tour.find("." + cls);
        return $tour.find(".feature__plan ." + cls).add($tour.find('.feature__steps li')).hover(function(e) {
          var $step, $target;
          $target = $(e.target);
          $step = $target.is("." + cls) ? $target : $target.find("." + cls);
          return $steps.filter("[data-i=" + ($step.data('i')) + "]").addClass(activeCls);
        }, function() {
          return $steps.removeClass(activeCls);
        });
      });
    })();
  });

}).call(this);
